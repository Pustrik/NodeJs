{"version":3,"file":"task1.js","sourceRoot":"","sources":["task1.ts"],"names":[],"mappings":"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","sourcesContent":["let readlineSync = require('readline-sync');\n\nenum status {\n    ToDo= 1,\n    InProgress,\n    QA,\n    DONE\n}\n\nclass Project {\n    protected project_name: string;\n    protected start_date: string;\n    protected end_date: string;\n    declare developers: Developers;\n    declare pm: PM;\n    declare qa: QA;\n    declare business_analytics: BusinessAnalytics;\n    constructor(project_name: string, start_date: string, end_date: string) {\n        this.project_name = project_name;\n        this.start_date = start_date;\n        this.end_date = end_date;\n        this.developers = new Developers(project_name);\n        this.pm = new PM(project_name);\n        this.qa = new QA(project_name);\n        this.business_analytics = new BusinessAnalytics(project_name);\n    }\n    addTask() {\n        let i = readlineSync.question(\"1 - DevOps\\n2 - QA\\n3 - PM\\n4 - Business Analytics\\n\");\n        switch (i) {\n            case \"1\":\n                if(this.developers.dev_task.status != status.DONE)\n                    console.log(\"Таск не завершен\");\n                else {\n                    this.developers.dev_task.task = readlineSync.question(\"Введите таск: \");\n                    this.developers.dev_task.status = status.ToDo;\n                }\n                break;\n            case \"2\":\n                if(this.qa.qa_task.status != status.DONE)\n                    console.log(\"Таск не завершен\");\n                else {\n                    this.qa.qa_task.task = readlineSync.question(\"Введите таск: \");\n                    this.qa.qa_task.status = status.ToDo;\n                }\n                break;\n            case \"3\":\n                if(this.pm.pm_task.status != status.DONE)\n                    console.log(\"Таск не завершен\");\n                else {\n                    this.pm.pm_task.task = readlineSync.question(\"Введите таск: \");\n                    this.pm.pm_task.status = status.ToDo;\n                }\n                break;\n            case \"4\":\n                if(this.business_analytics.business_analytics_task.status != status.DONE)\n                    console.log(\"Таск не завершен\");\n                else {\n                    this.business_analytics.business_analytics_task.task = readlineSync.question(\"Введите таск: \");\n                    this.business_analytics.business_analytics_task.status = status.ToDo;\n                }\n                break;\n            default:\n                console.log(\"Ошибка\");\n        }\n    }\n    get info() {\n        return this.project_name + \" from \" + this.start_date + \" to \" + this.end_date;\n    }\n\n}\n\ninterface Employee {\n    name: string;\n    suriname: string;\n}\n\ninterface State {\n    working_on: string;\n    getProjName(): string;\n    getState(): void;\n    addToState(name: string, suriname: string): boolean;\n    changeStatus(): void;\n    checkTask(): void;\n}\n\ninterface Task {\n    task: string;\n    status: status;\n}\n\nclass Developers implements State{\n    working_on: string;\n    dev_task: Task;\n    frontend: Array<Employee> = new Array<Employee>();\n    backend: Array<Employee> = new Array<Employee>();\n    devops: Array<Employee> = new Array<Employee>();\n    constructor(project_name: string) {\n        this.working_on = project_name;\n        this.dev_task = {task: \"empty\", status: status.DONE};\n    }\n    getProjName(): string {\n        return this.working_on;\n    }\n    getState() {\n        console.log(this.getProjName());\n        console.log(\"FrontEnd: \");\n        for(let person of this.frontend)\n            console.log(person.name + \" \" + person.suriname);\n        console.log(\"BackEnd: \");\n        for(let person of this.backend)\n            console.log(person.name + \" \" + person.suriname);\n        console.log(\"DevOps: \");\n        for(let person of this.devops)\n            console.log(person.name + \" \" + person.suriname);\n    }\n    addFrontend(name: string, suriname: string): boolean {\n        for(let person of this.frontend)\n            if(person.name == name && person.suriname == suriname)\n                return false;\n        this.frontend.push({name: name, suriname: suriname});\n        return true;\n    }\n    addBackend(name: string, suriname: string): boolean {\n        for(let person of this.backend)\n            if(person.name == name && person.suriname == suriname)\n                return false;\n        this.backend.push({name: name, suriname: suriname});\n        return true;\n    }\n    addDevops(name: string, suriname: string): boolean {\n        for(let person of this.devops)\n            if(person.name == name && person.suriname == suriname)\n                return false;\n        this.devops.push({name: name, suriname: suriname});\n        return true;\n    }\n    addToState(name: string, suriname: string): boolean {\n        switch (readlineSync.question(\"1 - FrontEnd\\n2 - BackEnd\\n3 - DevOps\")) {\n            case (1):\n                return this.addFrontend(name, suriname);\n            case (2):\n                return this.addBackend(name, suriname);\n            case (3):\n                return this.addDevops(name, suriname);\n            default:\n                return false;\n        }\n    }\n    changeStatus() {\n        let status: number = readlineSync.question(\"1 - To Do\\n2 - In Progress\\n3 - QA\\n4 - DONE\");\n        if(status > 0 && status < 5)\n            this.dev_task.status = status;\n    }\n    checkTask() {\n        console.log(\"DevOps task:\\n\" + this.dev_task.task + \"\\n\" + status[this.dev_task.status]);\n    }\n}\n\nclass PM implements State{\n    working_on: string;\n    pm_task: Task;\n    declare pm: Array<Employee>;\n    constructor(project_name: string) {\n        this.working_on = project_name;\n        this.pm_task = {task: \"empty\", status: status.DONE};\n\n    }\n    getProjName(): string {\n        return this.working_on;\n    }\n    getState() {\n        console.log(this.getProjName());\n        console.log(\"Project Managers: \");\n        for(let person of this.pm)\n            console.log(person.name + \" \" + person.suriname);\n    }\n    addToState(name: string, suriname: string): boolean {\n        for(let person of this.pm)\n            if(person.name == name && person.suriname == suriname)\n                return false;\n        this.pm.push({name: name, suriname: suriname});\n        return true;\n    }\n    changeStatus() {\n        let status: number = readlineSync.question(\"1 - To Do\\n2 - In Progress\\n3 - QA\\n4 - DONE\");\n        if(status > 0 && status < 5)\n            this.pm_task.status = status;\n    }\n    checkTask() {\n        console.log(\"PM task:\\n\" + this.pm_task.task + \"\\n\" + status[this.pm_task.status]);\n    }\n}\n\nclass QA implements State{\n    working_on: string;\n    qa_task: Task;\n    qa: Array<Employee> = new Array<Employee>();\n    constructor(project_name: string) {\n        this.working_on = project_name;\n        this.qa_task = {task: \"empty\", status: status.DONE};\n    }\n    getProjName(): string {\n        return this.working_on;\n    }\n    getState() {\n        console.log(this.getProjName());\n        console.log(\"QA: \");\n        for(let person of this.qa)\n            console.log(person.name + \" \" + person.suriname);\n    }\n    addToState(name: string, suriname: string): boolean {\n        for(let person of this.qa)\n            if(person.name == name && person.suriname == suriname)\n                return false;\n        this.qa.push({name: name, suriname: suriname});\n        return true;\n    }\n    changeStatus() {\n        let status: number = readlineSync.question(\"1 - To Do\\n2 - In Progress\\n3 - QA\\n4 - DONE\");\n        if(status > 0 && status < 5)\n            this.qa_task.status = status;\n    }\n    checkTask() {\n        console.log(\"QA task:\\n\" + this.qa_task.task + \"\\n\" + status[this.qa_task.status]);\n    }\n}\n\nclass BusinessAnalytics implements State{\n    working_on: string;\n    business_analytics_task: Task;\n    declare business_analytics: Array<Employee>;\n    constructor(project_name: string) {\n        this.working_on = project_name;\n        this.business_analytics_task = {task: \"empty\", status: status.DONE};\n    }\n    getProjName(): string {\n        return this.working_on;\n    }\n    getState() {\n        console.log(this.getProjName());\n        console.log(\"Business analytics: \");\n        for(let person of this.business_analytics)\n            console.log(person.name + \" \" + person.suriname);\n    }\n    addToState(name: string, suriname: string): boolean {\n        for(let person of this.business_analytics)\n            if(person.name == name && person.suriname == suriname)\n                return false;\n        this.business_analytics.push({name: name, suriname: suriname});\n        return true;\n    }\n    changeStatus() {\n        let status: number = readlineSync.question(\"1 - To Do\\n2 - In Progress\\n3 - QA\\n4 - DONE\");\n        if(status > 0 && status < 5)\n            this.business_analytics_task.status = status;\n    }\n    checkTask() {\n        console.log(\"DevOps task:\\n\" + this.business_analytics_task.task + \"\\n\" + status[this.business_analytics_task.status]);\n    }\n}\nlet firstProj: Project = new Project(\"firstProject\", \"13.09.22\", \"22.09.22\");\nconsole.log(firstProj.info);\nfirstProj.qa.addToState(\"1q\", \"1q\");\nfirstProj.developers.addDevops(\"1d\", \"1d\");\nfirstProj.developers.addDevops(\"1d\", \"1d\");\nfirstProj.developers.addDevops(\"2d\", \"2d\");\nfirstProj.developers.getState();\nfirstProj.developers.checkTask();\nfirstProj.addTask();\nfirstProj.developers.checkTask();\nfirstProj.developers.changeStatus();\nfirstProj.developers.checkTask();\n"]}